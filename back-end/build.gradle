apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'expenses'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

jar {
    baseName = 'back-end'
    version =  '0.1.0'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.security:spring-security-web:4.1.0.RELEASE")
    compile group: 'joda-time', name: 'joda-time', version: '2.9.3'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.35'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
 //   providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testCompile("de.svenkubiak:embedded-mongodb:4.2.9")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
    testCompile("junit:junit")    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
